version: '3.8'

services:
  fabric-network:
    build:
      context: .
      dockerfile: Dockerfile.fabric-network
    container_name: fabric-network

    volumes:
      - ./healthchaincode:/healthchaincode:rw,z
      - ./fabric-samples:/fabric-samples:rw
      - ./scripts:/scripts:rw
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /fabric-samples/test-network
    environment:
      DOCKER_HOST: unix:///var/run/docker.sock
      FABRIC_CFG_PATH: /fabric-samples/config
      PATH: /fabric-samples/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      # Add these for better Fabric control
      CORE_PEER_ADDRESS: peer0.org1.example.com:7051
      ORDERER_ADDRESS: orderer.example.com:7050
    command: ["bash", "-c", "sleep 10 && /scripts/deploy_mycc.sh"]  # Added delay
    healthcheck:
      test: ["CMD", "peer", "channel", "list"]  # More thorough check
      
      interval: 15s
      timeout: 10s
      retries: 10
    privileged: true  # Needed for Docker-in-Docker operations

  blockchain-service:
    build: 
      context: ./blockchain-service
      dockerfile: Dockerfile
    container_name: blockchain-service
    ports:
      - "8082:8082"
    depends_on:
      fabric-network:
        condition: service_healthy
    volumes:
      - ./fabric-samples:/app/fabric-samples
      # Consider making this read-only if only reading scripts
      - ./scripts:/app/scripts:ro  
    environment:
      CHANNEL_NAME: mychannel
      CHAINCODE_NAME: mycc
      # Add these for service discovery
      PEER0_ORG1_ADDRESS: peer0.org1.example.com:7051
      PEER0_ORG2_ADDRESS: peer0.org2.example.com:9051
      ORDERER_ADDRESS: orderer.example.com:7050